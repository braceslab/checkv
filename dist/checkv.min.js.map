{"version":3,"sources":["node_modules/browser-pack/_prelude.js","_main.js","lib/Check.js","lib/lib.js","lib/validate/array.js","lib/validate/function.js","lib/validate/index.js","lib/validate/number.js","lib/validate/object.js","lib/validate/string.js"],"names":[],"mappings":"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","file":"checkv.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict'\n\nconst lib = require('./lib/lib')\nconst Check = require('./lib/Check')\n\nconst check = new Check()\ncheck.lib = lib\n\nmodule.exports = check\n\nwindow.checkv=check","'use strict'\n\nconst validate = require('./validate/')\n\n// const log = require('log-segment')\n// log.add({segments: lib.checkv.log})\n\n/**\n * Rules\n\n */\n\nconst Check = function () {\n  /**\n   * @param {*} value\n   * @param {Rules} rules\n   * @return boolean\n   */\n  function check (value, rules) {\n    // check rules\n    if (!rules || Object.keys(rules).length < 1) {\n      console.log('chekcv', 'no rules checking value', value)\n      return true\n    }\n\n    // apply rules\n    let _match = true\n    for (const rule in rules) {\n      if (\n        !validate.number[rule] &&\n        !validate.string[rule] &&\n        !validate.array[rule] &&\n        !validate.object[rule] &&\n        !validate.function[rule]\n      ) {\n        return __unknownRule(value, rule)\n      }\n      let _compare = rules[rule]\n\n      switch (rule) {\n        // number cases\n        case 'isNumber':\n        case 'isInteger':\n        case 'isPositive':\n          _match = _compare === validate.number[rule](value)\n          break\n        case 'isEqual':\n        case 'isGreater':\n        case 'isLess':\n        case 'isGreaterOrEqual':\n        case 'isLessOrEqual':\n          _match = validate.number[rule](value, _compare)\n          break\n        // string cases\n        case 'isString':\n        case 'isEmail':\n          _match = _compare === validate.string[rule](value)\n          break\n        case 'isShorter':\n        case 'isLonger':\n          _match = validate.string[rule](value, _compare)\n          break\n        // object cases\n        case 'isSet':\n        case 'isObject':\n        case 'isArray':\n          _match = _compare === validate.object[rule](value)\n          break\n        case 'hasProperties':\n        case 'isExactly':\n        case 'isEnum':\n          _match = validate.object[rule](value, _compare)\n          break\n        // array cases\n        case 'isIn':\n          _match = validate.array[rule](value, _compare)\n          break\n        // function cases\n        case 'isFunction':\n          _match = _compare === validate.function[rule](value)\n          break\n        default:\n          return __unknownRule(value, rule)\n      }\n      if (!_match) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  function __unknownRule (value, rule) {\n    console.warn('checkv', 'unknow rule', rule, 'checking value', value)\n    return false\n  }\n\n  return check\n}\n\nmodule.exports = Check\n","'use strict'\n\nconst lib = {\n  checkv: {\n    log: {'checkv': { color: 'white' }}\n  }\n}\n\nmodule.exports = lib\n","'use strict'\n\nconst array = {\n  isIn: function (value, values) {\n    try {\n      return values.indexOf(value) !== -1\n    } catch (e) {\n      return false\n    }\n  }\n}\n\nmodule.exports = array\n","'use strict'\n\nconst f = {\n  isFunction: function (value) {\n    return typeof value === 'function'\n  }\n}\n\nmodule.exports = f\n","'use strict'\n\nconst validate = {\n  function: require('./function'),\n  number: require('./number'),\n  string: require('./string'),\n  object: require('./object'),\n  array: require('./array')\n}\n\nmodule.exports = validate\n","'use strict'\n\nconst number = {\n  isNumber: function (value) {\n    return typeof value === 'number'\n  },\n  isInteger: function (value) {\n    return number.isNumber(value) && Number.isInteger(value)\n  },\n  isPositive: function (value) {\n    return number.isNumber(value) && value >= 0\n  },\n  isEqual: function (value, to) {\n    return number.isNumber(value) && value === to\n  },\n  isGreater: function (value, than) {\n    return number.isNumber(value) && value > than\n  },\n  isLess: function (value, than) {\n    return number.isNumber(value) && value < than\n  },\n  isGreaterOrEqual: function (value, than) {\n    return number.isNumber(value) && value >= than\n  },\n  isLessOrEqual: function (value, than) {\n    return number.isNumber(value) && value <= than\n  }\n}\n\nmodule.exports = number\n","'use strict'\n\nconst object = {\n  isSet: function (value) {\n    return value !== null && value !== undefined\n  },\n  isObject: function (value) {\n    return value && typeof value === 'object'\n  },\n  isArray: function (value) {\n    return value instanceof Array\n  },\n  isEnum: function (value, _enum) {\n    try {\n      for (let key in _enum) {\n        if (_enum[key] === value) {\n          return true\n        }\n      }\n    } catch (e) {}\n    return false\n  },\n  /**\n   * implicitly check isObject\n   */\n  hasProperties: function (value, properties) {\n    if (!properties) {\n      console.warn('checkv', 'object.hasProperties, missing properties')\n    }\n    if (!properties || !object.isObject(value)) {\n      return false\n    }\n    for (let i = 0; i < properties.length; i++) {\n      if (!value.hasOwnProperty(properties[i])) {\n        return false\n      }\n    }\n    return true\n  },\n  /**\n   * @todo use deep-strict-equal?\n   */\n  isExactly: function (value, to) {\n    if (typeof to !== typeof value) {\n      return false\n    }\n\n    if (value === null && to === null) {\n      return true\n    }\n\n    if (typeof to === 'object') {\n      if (to.constructor.name !== value.constructor.name) {\n        return false\n      }\n\n      try {\n        if (value instanceof Error && to instanceof Error) {\n          return value.code === to.code || value.code === to.message || value.message === to.code\n        }\n      } catch (e) {\n        return false\n      }\n\n      if ((to instanceof Array && value instanceof Array) ||\n       (to instanceof Object || value instanceof Object)) {\n        for (let i = 0; i < to.length; i++) {\n          if (!object.isExactly(value[i], to[i])) {\n            return false\n          }\n        }\n        return true\n      }\n\n      console.warn('checkv', 'object.isExactly, unknown instance', to.constructor.name)\n      return false\n    }\n\n    // primitives\n    return value === to\n  }\n}\n\nmodule.exports = object\n","'use strict'\n\nconst string = {\n  isString: function (value) {\n    return typeof value === 'string'\n  },\n  isShorter: function (value, than) {\n    return string.isString(value) && value.length < than\n  },\n  isLonger: function (value, than) {\n    return string.isString(value) && value.length > than\n  },\n  isEmail: function (value) {\n    if (!value || !string.isString(value)) {\n      return false\n    }\n    // eslint-disable-next-line\n    return (/^[\\w\\.-]+@[\\w\\.-]+$/i).test(value)\n  }\n}\n\nmodule.exports = string\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}